$fn = 50;


difference() {
	union() {
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [-22.5000000000, 14, -3]) {
				linear_extrude(height = 3) {
					text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_plate_shape_p_type_6_depth_-22.5_0_-3_pos_motor_tt_01_extra_6_width_3_height_6_thickness_-22.5_0_-3_pos_plate_0_0_0_pos_item_1_1_2_1_3_1_4_1_5_1_6_1_1_3_2_3_3_3_4_3_5_3_6_3_1_2_6_2_oobb_holes_1.5_1_2.5_1_3.5_1_1.5_3_2.5_3_3.5_3_1_1.5_1_2.5_6_1.5_6_2.5_oobe_holes_0_0_0_connecting_screws_true_extra_mm", valign = "center");
				}
			}
		}
		translate(v = [-22.5000000000, 0, -3]) {
			hull() {
				translate(v = [-40.0000000000, 17.5000000000, 0]) {
					cylinder(h = 6, r = 5);
				}
				translate(v = [40.0000000000, 17.5000000000, 0]) {
					cylinder(h = 6, r = 5);
				}
				translate(v = [-40.0000000000, -17.5000000000, 0]) {
					cylinder(h = 6, r = 5);
				}
				translate(v = [40.0000000000, -17.5000000000, 0]) {
					cylinder(h = 6, r = 5);
				}
			}
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [-22.5000000000, 14, -3]) {
				linear_extrude(height = 3) {
					text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_holes_shape_p_type_m6_radius_name_-22.5_0_-3_pos_motor_tt_01_extra_6_width_3_height_6_thickness_-22.5_0_-3_pos_plate_0_0_0_pos_item_1_1_2_1_3_1_4_1_5_1_6_1_1_3_2_3_3_3_4_3_5_3_6_3_1_2_6_2_oobb_holes_1.5_1_2.5_1_3.5_1_1.5_3_2.5_3_3.5_3_1_1.5_1_2.5_6_1.5_6_2.5_oobe_holes_0_0_0_connecting_screws_single_holes_1_1_2_1_3_1_4_1_5_1_6_1_1_3_2_3_3_3_4_3_5_3_6_3_1_2_6_2_loc", valign = "center");
				}
			}
		}
	}
	union() {
		translate(v = [0, 0, 0]) {
			rotate(a = [0, 180, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, 0.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 52.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 52.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 102.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 102.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 102.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 152.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 152.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, 0.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 52.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 52.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 102.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 102.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 102.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 152.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 152.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, 0.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 52.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 52.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 102.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 102.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 102.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 152.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 152.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						cylinder(h = 26, r = 1.5000000000);
						translate(v = [0, 0, 26.0000000000]) {
							cylinder(h = 53.2000000000, r = 3.0000000000);
						}
						cylinder(h = 26, r = 1.8000000000);
						translate(v = [-1.7500000000, -3.2500000000, 25.7000000000]) {
							cube(size = [3.5000000000, 6.5000000000, 0.3000000000]);
						}
						translate(v = [-1.7500000000, -1.7500000000, 25.4000000000]) {
							cube(size = [3.5000000000, 3.5000000000, 0.3000000000]);
						}
						cylinder(h = 26, r = 1.5000000000);
					}
					union();
				}
			}
		}
		translate(v = [0, 0, 0]) {
			rotate(a = [0, 0, 0]) {
				difference() {
					union() {
						translate(v = [15.5000000000, 15.5000000000, 6]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.5000000000);
										}
										translate(v = [0, 0, -1.9000000000]) {
											cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
										}
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.8000000000);
										}
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.5000000000);
										}
									}
									union();
								}
							}
						}
						translate(v = [-15.5000000000, 15.5000000000, 6]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.5000000000);
										}
										translate(v = [0, 0, -1.9000000000]) {
											cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
										}
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.8000000000);
										}
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.5000000000);
										}
									}
									union();
								}
							}
						}
						translate(v = [15.5000000000, -15.5000000000, 6]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.5000000000);
										}
										translate(v = [0, 0, -1.9000000000]) {
											cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
										}
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.8000000000);
										}
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.5000000000);
										}
									}
									union();
								}
							}
						}
						translate(v = [-15.5000000000, -15.5000000000, 6]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.5000000000);
										}
										translate(v = [0, 0, -1.9000000000]) {
											cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
										}
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.8000000000);
										}
										translate(v = [0, 0, -25.0000000000]) {
											cylinder(h = 25, r = 1.5000000000);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -125.0000000000]) {
							cylinder(h = 250, r = 13.0000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [8.0000000000, -18.0000000000, 10.5000000000]) {
			rotate(a = [0, 0, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.5000000000);
						}
						translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.8000000000);
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [-8.0000000000, 18.0000000000, 10.5000000000]) {
			rotate(a = [0, 0, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.5000000000);
						}
						translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.8000000000);
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [-8.0000000000, -18.0000000000, -1.5000000000]) {
			rotate(a = [0, 180, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.5000000000);
						}
						translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.8000000000);
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [8.0000000000, 18.0000000000, -1.5000000000]) {
			rotate(a = [0, 180, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							rotate(a = [0, 0, 0]) {
								difference() {
									union() {
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										linear_extrude(height = 2.5000000000) {
											polygon(points = [[3.4620000000, 0.0000000000], [1.7310000000, 2.9981799479], [-1.7310000000, 2.9981799479], [-3.4620000000, 0.0000000000], [-1.7310000000, -2.9981799479], [1.7310000000, -2.9981799479]]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, -0.3000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, -0.6000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -3.0000000000, 2.5000000000]) {
											cube(size = [3.6000000000, 6.0000000000, 0.3000000000]);
										}
										translate(v = [-1.8000000000, -1.8000000000, 2.8000000000]) {
											cube(size = [3.6000000000, 3.6000000000, 0.3000000000]);
										}
									}
									union();
								}
							}
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.5000000000);
						}
						translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.8000000000);
						}
						translate(v = [0, 0, -12.0000000000]) {
							cylinder(h = 12, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [-45, 0, 0]) {
			rotate(a = [0, 0, 0]) {
				difference() {
					union() {
						translate(v = [-1.5000000000, 0, -3]) {
							hull() {
								translate(v = [-6.5000000000, 6.0000000000, 0]) {
									cylinder(h = 6, r = 5);
								}
								translate(v = [6.5000000000, 6.0000000000, 0]) {
									cylinder(h = 6, r = 5);
								}
								translate(v = [-6.5000000000, -6.0000000000, 0]) {
									cylinder(h = 6, r = 5);
								}
								translate(v = [6.5000000000, -6.0000000000, 0]) {
									cylinder(h = 6, r = 5);
								}
							}
						}
					}
					union();
				}
			}
		}
		translate(v = [-52.5000000000, 15, -3]) {
			rotate(a = [0, 180, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -25.0000000000]) {
							cylinder(h = 25, r = 1.5000000000);
						}
						translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						translate(v = [0, 0, -25.0000000000]) {
							cylinder(h = 25, r = 1.8000000000);
						}
						translate(v = [0, 0, -25.0000000000]) {
							cylinder(h = 25, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [-52.5000000000, -15, -3]) {
			rotate(a = [0, 180, 0]) {
				difference() {
					union() {
						translate(v = [0, 0, -25.0000000000]) {
							cylinder(h = 25, r = 1.5000000000);
						}
						translate(v = [0, 0, -1.9000000000]) {
							cylinder(h = 1.9000000000, r1 = 1.8000000000, r2 = 3.6000000000);
						}
						translate(v = [0, 0, -25.0000000000]) {
							cylinder(h = 25, r = 1.8000000000);
						}
						translate(v = [0, 0, -25.0000000000]) {
							cylinder(h = 25, r = 1.5000000000);
						}
					}
					union();
				}
			}
		}
		translate(v = [-60.0000000000, -15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [-45.0000000000, -15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [-30.0000000000, -15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [-15.0000000000, -15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [0.0000000000, -15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [15.0000000000, -15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [-60.0000000000, 15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [-45.0000000000, 15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [-30.0000000000, 15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [-15.0000000000, 15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [0.0000000000, 15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [15.0000000000, 15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [-60.0000000000, 0.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		translate(v = [15.0000000000, 0.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 3.2500000000);
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [-22.5000000000, 14, -3]) {
				linear_extrude(height = 3) {
					text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_holes_shape_n_type_m3_radius_name_-22.5_0_-3_pos_motor_tt_01_extra_6_width_3_height_6_thickness_-22.5_0_-3_pos_plate_0_0_0_pos_item_1_1_2_1_3_1_4_1_5_1_6_1_1_3_2_3_3_3_4_3_5_3_6_3_1_2_6_2_oobb_holes_1.5_1_2.5_1_3.5_1_1.5_3_2.5_3_3.5_3_1_1.5_1_2.5_6_1.5_6_2.5_oobe_holes_0_0_0_connecting_screws_single_holes_1.5_1_2.5_1_3.5_1_1.5_3_2.5_3_3.5_3_1_1.5_1_2.5_6_1.5_6_2.5_loc", valign = "center");
				}
			}
		}
		translate(v = [-52.5000000000, -15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		translate(v = [-37.5000000000, -15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		translate(v = [-22.5000000000, -15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		translate(v = [-52.5000000000, 15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		translate(v = [-37.5000000000, 15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		translate(v = [-22.5000000000, 15.0000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		translate(v = [-60.0000000000, -7.5000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		translate(v = [-60.0000000000, 7.5000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		translate(v = [15.0000000000, -7.5000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		translate(v = [15.0000000000, 7.5000000000, -50.0000000000]) {
			cylinder(h = 100, r = 1.8000000000);
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [0, 14, 0]) {
				linear_extrude(height = 3) {
					text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_screw_socket_cap_shape_n_type_m3_radius_name_26_depth_motor_tt_01_extra_6_width_3_height_6_thickness_-22.5_0_-3_pos_plate_0_0_0_pos_item_1_1_2_1_3_1_4_1_5_1_6_1_1_3_2_3_3_3_4_3_5_3_6_3_1_2_6_2_oobb_holes_1.5_1_2.5_1_3.5_1_1.5_3_2.5_3_3.5_3_1_1.5_1_2.5_6_1.5_6_2.5_oobe_holes_0_0_0_connecting_screws_true_nut_180_rot_y_bottom_zz_top_clearance_true_overhang", valign = "center");
				}
			}
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [0, 14, 0]) {
				linear_extrude(height = 3) {
					text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_motor_stepper_nema_17_shape_n_type_motor_tt_01_extra_6_width_3_height_6_thickness_-22.5_0_-3_pos_plate_0_0_0_pos_item_1_1_2_1_3_1_4_1_5_1_6_1_1_3_2_3_3_3_4_3_5_3_6_3_1_2_6_2_oobb_holes_1.5_1_2.5_1_3.5_1_1.5_3_2.5_3_3.5_3_1_1.5_1_2.5_6_1.5_6_2.5_oobe_holes_0_0_0_connecting_screws_true_overhang", valign = "center");
				}
			}
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [8.0000000000, -4.0000000000, 10.5000000000]) {
				linear_extrude(height = 3) {
					text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_screw_countersunk_shape_n_type_m3_radius_name_12_depth_8.0_-18.0_10.5_pos_motor_tt_01_extra_6_width_3_height_12_thickness_6705_bearing_0_0_0_rot_true_nut_true_overhang", valign = "center");
				}
			}
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [-8.0000000000, 32.0000000000, 10.5000000000]) {
				linear_extrude(height = 3) {
					text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_screw_countersunk_shape_n_type_m3_radius_name_12_depth_-8.0_18.0_10.5_pos_motor_tt_01_extra_6_width_3_height_12_thickness_6705_bearing_0_0_0_rot_true_nut_true_overhang", valign = "center");
				}
			}
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [-8.0000000000, -4.0000000000, -1.5000000000]) {
				rotate(a = [0, 180, 0]) {
					linear_extrude(height = 3) {
						text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_screw_countersunk_shape_n_type_m3_radius_name_12_depth_-8.0_-18.0_-1.5_pos_motor_tt_01_extra_6_width_3_height_12_thickness_6705_bearing_0_180_0_rot_true_nut_true_overhang", valign = "center");
					}
				}
			}
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [8.0000000000, 32.0000000000, -1.5000000000]) {
				rotate(a = [0, 180, 0]) {
					linear_extrude(height = 3) {
						text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_screw_countersunk_shape_n_type_m3_radius_name_12_depth_8.0_18.0_-1.5_pos_motor_tt_01_extra_6_width_3_height_12_thickness_6705_bearing_0_180_0_rot_true_nut_true_overhang", valign = "center");
					}
				}
			}
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [-45, 14, 0]) {
				linear_extrude(height = 3) {
					text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_wire_spacer_shape_n_type_-45_0_0_pos_motor_tt_01_extra_6_width_3_height_6_thickness", valign = "center");
				}
			}
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [-52.5000000000, 29, -3]) {
				rotate(a = [0, 180, 0]) {
					linear_extrude(height = 3) {
						text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_screw_countersunk_shape_n_type_m3_radius_name_25_depth_-52.5_15_-3_pos_motor_tt_01_extra_6_width_3_height_6_thickness_0_180_0_rot", valign = "center");
					}
				}
			}
		}
		*color(alpha = 1.0000000000, c = "gray") {
			translate(v = [-52.5000000000, -1, -3]) {
				rotate(a = [0, 180, 0]) {
					linear_extrude(height = 3) {
						text(font = "Arial:style=Bold", halign = "center", size = 4.5000000000, text = "COMMENT description oobb_screw_countersunk_shape_n_type_m3_radius_name_25_depth_-52.5_-15_-3_pos_motor_tt_01_extra_6_width_3_height_6_thickness_0_180_0_rot", valign = "center");
					}
				}
			}
		}
	}
}